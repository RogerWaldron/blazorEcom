
@inject IProductService ProductService

@if(ProductService.Products == null ||
        ProductService.Products.Count == 0)
{
    <span>Loading Products...</span>
}
else
{
    <div class="container">
        <ul class="list-unstyled">
            @foreach (var product in ProductService.Products)
            {
                <li class="card" style="max-width: 40rem;">
                    <div>
                        <a href="/product/@product.Id">
                            <img class="card-img-top img-fluid" src="@product.ImageUrl" alt="@product.Title" />
                        </a>
                    </div>
                    <div class="card-body">
                        <a href="/product/@product.Id">
                            <h4 class="card-title">@product.Title</h4>
                        </a>
                        <p class="card-text">@product.Description</p>
                        <h5 class="price">
                            $@product.Price
                        </h5>
                    </div>
                </li>
            }
        </ul>
    </div>
}


@code {
    private static List<Product> Products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetProducts();
    }
}

